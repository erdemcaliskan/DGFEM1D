{
# polynomidal orer for elements
polyOrder 
2

lumpMass 
0


# solution mode:
# matrix only
#		Mats_Only	 			// M, C, K computed
#		Mats_OnlyNaturalMode	// (-M omega^2 + i omega C + K) a  = 0 is solved for omega
#		Mats_OnlyBloch,		 	// option for Bloch mode analysis 
# matrix and RHS F
#		MatsF_Static			// Ka = F
#		MatsF_Dynamic			// Ma'' + Ca' + Ka = F is solved dynamically - time stepping option should be provided separately
#		MatsF_Helmholtz			// (-M omega^2 + i omega C + K) a = F
solutionMode
#Mats_Only
Mats_OnlyNaturalMode

# cfem	DG_2FUV	DG_1F_vStar	DG_1F_uStar
wf_type
#cfem
#DG_2FUV
DG_1F_vStar

isBlochModeAnalysis
0

isHelmholtz
0

omega
1.0

# Riemann	Central	Alternating_sL	Alternating_sR
sOption
#Riemann
Central

# -1	0	1
# -1 -> SIPG (needs large eta)
#  1 -> NIPG (needs eta > 0)
#  0 -> IIPG (large eta?) Incomplete ... (Dawson, Sun, Wheeler 2004)
dg_eps
1
#0

# factor(etaI)[u][u] penalty term inside the domain
etaI
1.0
#0.0

# factor(etaB)[u][u] penalty term on Dirichlet BC
etaB
1.0
#0.0

#   Dirichlet	Neumann		Characteristics		Unspecified		Symmetric		AntiSymmetric	PeriodicOrBloch
# only Neumann implemented; PeriodicOrBloch entry here seems sufficient and isBlochModeAnalysis above may be removed (TODO)
leftBC
Dirichlet
#Neumann


rightBC
Dirichlet
#Neumann

# load Numbers: 0	-> constant   loadValue[0], 1 -> linear in t  loadValue[0] + loadValue[1] * t, ....

leftBC_loadNumber
0

leftBC_loadValues
{
0.0
}

rightBC_loadNumber
0

rightBC_loadValues
{
0.0
}

# output file name for K, M, C
outputFileNameWOExt
output_DG_1F_vStar_central_epsp1_eta1

################################################################################# material properties
############################			uniform	(option 1)		random_field (option 2)			layered (option 3)
mPropt
uniform
#random_field
#layered

### Option 1: mPropt == uniform
num_elements
100

xm
-0.5

xM
0.5

E_uniform
1.0

rho_uniform
1.0

damping_uniform
0.0


############################## Option 2: mPropt == random_field
# all or most entries from uniform option are used with the exception of E's and/or rho's that may be overwritten


#					== 0 or +/-1 nothing happens
#					>  1  -> number of segments is DECREASED by this factor (e.g. if resolutionFactor ==  10 and numSegments = 1000 -> numSegments becoms 100)
#					<  -1 -> number of segments is INCREASED by this factor (e.g. if resolutionFactor == -10 and numSegments = 1000 -> numSegments becoms 10000)
resolutionFactor
16

### random E
# coarsening option: 			none			-> E_uniform will be used,			mean_harmonic (suggested for random E)		mean_arithmetic (suggested for random rho)
# use none to turn it off
sso_E
mean_harmonic

randomField_E
# baseName_WOExt:
InhomogeneousFiles/cl-2.5_np1025/initial_values
{
num_Vals_and_x_Provided
1

valsAtVertices
1

uniformGrid
1

containsRepeatingEndPeriodicVal
0

randVariableType
Triangle

{
	min	
	0.6
	max
	1.4
	mode
	1.00
}
}


### random rho
# coarsening option: 			none			-> E_uniform will be used,			mean_harmonic (suggested for random E)		mean_arithmetic (suggested for random rho)
# use none to turn it off
sso_rho
#mean_arithmetic
none

randomField_rho
# baseName_WOExt:
InhomogeneousFiles/cl-2.5_np1025/initial_values
{
num_Vals_and_x_Provided
1

valsAtVertices
1

uniformGrid
1

containsRepeatingEndPeriodicVal
0

randVariableType
Triangle

{
	min	
	0.6
	max
	1.4
	mode
	1.00
}
}


############################## Option 3: mPropt == layered
layered_properties
{
# how many times the sequence read from the text file is repeated
numRepeatSequence
2

# > 0	-> bulk sizes should be smaller than this
# < 0  -> refinement ratio (e.g. -2 -> each segment is divided into two)
directSpaceSizeModifier
-4

bulk_elastic_map
	{
	# unit cell: 5L 1,2,3,2,1
	1
		{
			rho	1.18
			E_iso	8.7
		}	
	2
		{
			rho	1.1
			# 5LA: 2.2, 5LD: 0.02
			E_iso	2.2
		}	
	3
		{
			rho	8.0
			E_iso	320.0
#			E_iso	32.0
		}	
	}
	
bulkModifierFileNameWOserExt
LayeredFiles/NN/NN5L

}




}